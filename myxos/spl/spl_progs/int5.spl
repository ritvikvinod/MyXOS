alias physicalSP S0;
alias systemCallNo S1;
alias i S2;
alias childPID S3;
alias currentPID S4;
alias currentPCB S5;
alias currentPageTable S6;
alias noOfPages S7;
alias noOfMemPages S8;
alias childPageTable S9;
alias childPCB S10;
alias systemFileEntry S11;
alias childSP S12;
alias j S13;
alias k S14;
alias parentPage S15;

physicalSP=([PTBR+2*(SP/512)]*512)+(SP%512);
systemCallNo=[physicalSP-1];
if(systemCallNo==8) then
	i=0;
	while(i<32) do
		if([READY_LIST+i*32+1]==0) then
			childPID=i;
			break;
		endif;
		i=i+1;
	endwhile;
	if(i==32) then
		[physicalSP-2]=-1;
		ireturn;
	endif;
	currentPID = (PTBR - 1024) / 8;
	currentPCB = READY_LIST + 32 * currentPID;
	currentPageTable=PAGE_TABLE+(currentPID*8);
	i=0;
	noOfPages=0;
	while(i<4) do
		if([currentPageTable+(i*2)]!=-1) then
			noOfPages=noOfPages+1;
		endif;
		i=i+1;
	endwhile;
	i=29;
	while(i<64) do			
		if([MEM_LIST+i]==0) then
			noOfMemPages=noOfMemPages+1;
		endif;
		i=i+1;			
	endwhile;
	if(noOfMemPages<noOfPages) then
		[physicalSP-2]=-1;
		ireturn;
	endif;
	i=29;
	j=0;
	k=0;
	alias childPage S7;
	alias m S1;
	while(i<64) do	
		if([PAGE_TABLE+currentPID*8+(j*2)]==-1) then
			[PAGE_TABLE+childPID*8+(j*2)]=-1;
			[PAGE_TABLE+childPID*8+(j*2) + 1]="00";
			j=j+1;
			continue;
		endif;
		if(noOfPages==0) then
			break;
		endif;
		if([MEM_LIST+i]==0) then
			noOfPages=noOfPages-1;
			[MEM_LIST+i]=1;
			[PAGE_TABLE+childPID*8+(j*2)]=i;
			[PAGE_TABLE+childPID*8+(j*2)+1]="01";
			
			//if([PAGE_TABLE+currentPID*8+(k*2)]==-1) then
			//	k=k+1;
			//endif;
			parentPage=[PAGE_TABLE+currentPID*8+(j*2)];
			childPage=i;
			m=0;
			while(m<512) do
				[childPage*512+m]=[parentPage*512+m];
				m=m+1;
			endwhile;
			j=j+1;
		endif;
		i=i+1;	
	endwhile;
	childPageTable=PAGE_TABLE+(childPID*8);
	childPCB = READY_LIST + 32 * childPID;
	[childPCB+0]=childPID;
	[childPCB+5]=childPageTable;
	[childPCB+4]=[physicalSP];
	[childPCB+3]=SP-1;
	[childPCB+2]=BP;
	[childPCB+6]=PTLR;
	[childPCB+7]=R0;
	[childPCB+8]=R1;
	[childPCB+9]=R2;
	[childPCB+10]=R3;
	[childPCB+11]=R4;
	[childPCB+12]=R5;
	[childPCB+13]=R6;
	[childPCB+14]=R7;
	[childPCB+31]=currentPID;
	i=15;
	while(i<31) do
		[childPCB+i]=[currentPCB+i];		
		i=i+1;
	endwhile;
	i=0;
	while(i<8) do
		systemFileEntry=[currentPCB+15+i*2];
		[FILE_TABLE+systemFileEntry*2+1]=[FILE_TABLE+systemFileEntry*2+1]+1;
		i=i+1;
	endwhile;
	[childPCB+1]=1;
	childSP=([childPageTable+2*((SP-1)/512)]*512)+((SP-1)%512);
	[childSP-1]=-2;
	[physicalSP-2]=childPID;
	ireturn;
endif;

load(7,1);
load(8,2);
load(5,19);
load(6,20);
load(23,17);
load(24,18);
[READY_LIST+0]=0;
[READY_LIST+31]=0;
[READY_LIST+32]=1;
load(25,21);
load(26,22);
load(27,23);
PTBR=1024;
PTLR=4;
[PTBR+0]=25;
[PTBR+1]="01";
[PTBR+2]=26;
[PTBR+3]="01";
[PTBR+4]=27;
[PTBR+5]="01";
[PTBR+6]=28;
[PTBR+7]="01";
[READY_LIST+1]=2;
SP=3*512;
[28*512]=0;
load(11,5);
load(12,6);
load(13,7);
load(14,8);
load(15,9);
load(16,10);
load(17,11);
load(18,12);
load(19,13);
load(20,14);
load(21,15);
load(22,16);
load(23,17);
load(24,18);
alias counter S1;
counter = 0;
while ( counter <  29) do			
	[ MEM_LIST + counter ] = 1;		
	counter = counter + 1;			
endwhile;
counter=29;
while ( counter <  65) do			
	[ MEM_LIST + counter ] = 0;		
	counter = counter + 1;			
endwhile;
counter = 32;
while ( counter <  1024) do			
	[ READY_LIST + counter ] = 0;		
	counter = counter + 32;			
endwhile;
//load(29,27);
//alias PTBR_Process1 S0;
//PTBR_Process1=1024+1*8;
//[PTBR_Process1+0]=29;
//[PTBR_Process1+1]="01";
//[PTBR_Process1+2]=-1;
//[PTBR_Process1+3]="00";
//[PTBR_Process1+4]=-1;
//[PTBR_Process1+5]="00";
//[PTBR_Process1+6]=30;
//[PTBR_Process1+7]="01";
//[READY_LIST+33]=1; 
//[READY_LIST+37]=PTBR_Process1;
//[READY_LIST+38]=4;
//[READY_LIST+34]=3*512;
//[READY_LIST+35]=3*512;
//[READY_LIST+36]=0;
load(9,3);
load(10,4);
counter = 0;
while ( counter <  128) do			
	[ FILE_TABLE + counter + 0] = -1;	
	[ FILE_TABLE + counter + 1] =  0;	
	counter = counter + 2;			
endwhile;
counter=15;
while(counter<31) do
	[READY_LIST+counter]=-1;
	[READY_LIST+counter+1]=-1;
	counter=counter+2;
endwhile;
counter=448;
while(counter<511) do
	[DISK_LIST+counter]=0;
	counter=counter+1;
endwhile;
store(6,20);
ireturn;
